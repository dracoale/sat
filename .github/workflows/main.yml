name: Python CI without Virtual Environment

on:
  schedule:
   - cron: '0 10,17 * * *'
  push:
    branches:
      - main  # O la rama que estés usando
  workflow_dispatch:  # Esto permite ejecutar el flujo de trabajo manualmente desde la interfaz de GitHub


jobs:
  build:
    runs-on: windows-2022   # El entorno de ejecución será Ubuntu

    steps:
      # 1. Clonar el repositorio
      - name: Check out the repository
        uses: actions/checkout@v2

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Especifica la versión de Python que deseas usar
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\AppData\Local\pip\cache  # Directorio donde pip guarda los paquetes descargados
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}  # Identificador único para la caché
          restore-keys: |
            ${{ runner.os }}-pip
      
      # 3. Instalar dependencias directamente desde requirements.txt
      - name: Install dependencies
        run: |
          choco install googlechrome  # Usamos Chocolatey para instalar Google Chrome en Windows
          choco install chromedriver

          pip install -r sat2/requirements.txt  # Instalamos las dependencias de 'requirements.txt'

      # 4. Ejecutar el script de Python
      - name: Run Python script
        run: |
          python sat2/sat.py  # Ejecuta 'script.py' desde la carpeta 'sat'
        env:
          GMAIL_USER: ${{ secrets.GMAIL_USER }}  # Usamos el secret GMAIL_USER
          GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}  # Usamos el secret GMAIL_PASSWORD
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}  #
